---
resource_types:
- name: marketplace
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/tanzu_isv_engineering/mkpcli_concourse_resource
    username: ((harbor.username))
    password: ((harbor.token))
    tag: staging

resources:
- name: source
  type: git
  icon: github
  source:
    uri: git@github.com:vmware-samples/concourse-resource-for-marketplace.git
    private_key: ((github.private_key))
    branch: main

- name: staging-image
  type: registry-image
  icon: docker
  source:
    repository: harbor-repo.vmware.com/tanzu_isv_engineering/mkpcli_concourse_resource
    username: ((harbor.username))
    password: ((harbor.token))
    tag: staging

- name: test-product
  type: marketplace
  icon: storefront
  source:
    csp_api_token: ((marketplace_api_token))
    marketplace_env: production
    product_slug: nginx

jobs:
- name: test
  plan:
    - get: source
      trigger: true
    - task: test
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: ghcr.io/vmware-tanzu/carvel-docker-image
            tag: latest
        inputs:
          - name: source
        run:
          path: bash
          dir: source
          args:
            - -exc
            - |
              apt-get update && apt-get install -y jq git make shellcheck
              make lint test

- name: build
  plan:
  - get: source
    passed: [test]
    trigger: true
  - task: build-image
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: harbor-repo.vmware.com/dockerhub-proxy-cache/concourse/oci-build-task
          username: ((harbor.username))
          password: ((harbor.token))
      inputs:
        - name: source
          path: .
      outputs:
        - name: image
      run:
        path: build
  - put: staging-image
    inputs: [ image ]
    params:
      image: image/image.tar

- name: test-get
  plan:
    - get: test-product
      params:
        accept_eula: true
        filename: nginx-chart.tgz
    - task: inspect-product.json
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: harbor-repo.vmware.com/dockerhub-proxy-cache/stedolan/jq
            username: ((harbor.username))
            password: ((harbor.token))
            tag: latest
        inputs:
          - name: test-product
        run:
          path: bash
          dir: test-product
          args:
            - -exc
            - |
              test $(jq -r .slug product.json) == nginx
    - task: inspect-downloaded-chart
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: harbor-repo.vmware.com/dockerhub-proxy-cache/alpine/helm
            username: ((harbor.username))
            password: ((harbor.token))
            tag: latest
        inputs:
          - name: test-product
        run:
          path: bash
          dir: test-product
          args:
            - -exc
            - |
              test -f nginx-chart.tgz
              helm show chart nginx-chart.tgz | grep "name: nginx"
